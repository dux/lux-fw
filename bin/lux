#!/usr/bin/env ruby
# -*- mode: ruby -*-

if File.exists?('lux-fw.gemspec')
  puts 'Cant run in lux folder'
  exit
end

require 'thor'
require 'colorize'
require 'optparse'
require 'awesome_print'
require 'dotenv'
require 'whirly'
require_relative '../lib/overload/thread'

Dotenv.load

LUX_ROOT = File.expand_path '../..', __FILE__

puts 'Lux v%s (%s)' % [File.read('%s/.version' % LUX_ROOT), LUX_ROOT] unless ARGV[0]

###

module Cli
  extend self

  def run what
    puts what.green
    system what
  end

  def die text
    puts text.red
    exit
  end

  def info text
    puts '* %s' % text.magenta
  end
end

###

trap("SIGINT") { Cli.die 'ctrl+c exit' }

LuxCli = Class.new Thor

# remove new in app, or allow only new while not in app
files  = Dir['%s/bin/cli/*.rb' % LUX_ROOT]
filter = File.exist?('./Gemfile') ? :reject : :select
files  = files.send(filter) { |name| name.include?('/new.rb') }
files.each { |it| load it }

LuxCli.start ARGV

###

if !ARGV[0] && (Dir['./Rakefile*'] + Dir['./rakefile*'])[0]
  Whirly.start spinner: "dots" do
    t = Thread::Simple.new
    t.add(:rake) { `rake -T` }
    t.add(:capistrano) { `cap -T` } if File.exist?('./Capfile')
    t.run

    if t[:rake]
      puts 'Rake tasks:'
      puts '  ' + t[:rake].gsub($/, "\n  ")
    end

    if t[:capistrano]
      puts 'Capinstrano tasks:'
      puts '  ' + t[:capistrano].gsub($/, "\n  ")
    end
  end
end
